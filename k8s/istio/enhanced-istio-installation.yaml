apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: control-plane
  namespace: istio-system
spec:
  values:
    global:
      meshID: mesh1
      multiCluster:
        clusterName: cluster1
      network: network1
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        # Enable automatic sidecar injection
        autoInject: enabled
        # Configure proxy settings
        holdApplicationUntilProxyStarts: true
        # Enable distributed tracing
        tracer: jaeger
    pilot:
      env:
        EXTERNAL_ISTIOD: false
        PILOT_TRACE_SAMPLING: "100"
        PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
        PILOT_SKIP_VALIDATE_TRUST_DOMAIN: true
        PILOT_ENABLE_STATUS: true
        PILOT_ENABLE_ALPHA_GATEWAY_API: true
    telemetry:
      v2:
        enabled: true
        prometheus:
          configOverride:
            metric_relabeling_configs:
            - source_labels: [__name__]
              regex: 'istio_.*'
              action: keep
            - source_labels: [__name__]
              regex: 'envoy_.*'
              action: keep
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
          limits:
            cpu: 2000m
            memory: 4096Mi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istiod
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
          - type: Resource
            resource:
              name: memory
              target:
                type: Utilization
                averageUtilization: 80
        env:
        - name: PILOT_ENABLE_ALPHA_GATEWAY_API
          value: "true"
        - name: PILOT_ENABLE_STATUS
          value: "true"
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        hpaSpec:
          maxReplicas: 10
          minReplicas: 3
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 70
          - type: Resource
            resource:
              name: memory
              target:
                type: Utilization
                averageUtilization: 80
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
            protocol: TCP
          - port: 80
            targetPort: 8080
            name: http2
            protocol: TCP
          - port: 443
            targetPort: 8443
            name: https
            protocol: TCP
          - port: 15443
            targetPort: 15443
            name: tls
            protocol: TCP
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "15090"
          prometheus.io/path: "/stats/prometheus"
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-egressgateway
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "15090"
          prometheus.io/path: "/stats/prometheus"
  meshConfig:
    accessLogFile: /dev/stdout
    accessLogFormat: |
      [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
      %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
      %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
      "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
      %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS%
      %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
    defaultConfig:
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*outlier_detection.*"
        - ".*circuit_breakers.*"
        - ".*upstream_rq_retry.*"
        - ".*upstream_rq_pending.*"
        - ".*_cx_.*"
        - ".*_rq_.*"
        - ".*http_.*"
        - ".*cluster\\..*\\.upstream_rq_.*"
        - ".*cluster\\..*\\.health_check.*"
        - ".*cluster\\..*\\.update_.*"
        exclusionRegexps:
        - ".*osconfig_googet.*"
      gatewayTopology:
        numTrustedProxies: 2
      # Enable automatic protocol detection
      proxyMetadata:
        PILOT_ENABLE_ALPHA_GATEWAY_API: "true"
        BOOTSTRAP_XDS_AGENT: "true"
      # Configure tracing
      tracing:
        sampling: 100.0
        custom_tags:
          http.url:
            header:
              name: ":path"
          http.method:
            header:
              name: ":method"
          user.id:
            header:
              name: "x-user-id"
          request.id:
            header:
              name: "x-request-id"
    extensionProviders:
    - name: jaeger
      envoyOtelAls:
        service: jaeger-collector.istio-system.svc.cluster.local
        port: 4317
    - name: prometheus
      prometheus:
        configOverride:
          metric_relabeling_configs:
          - source_labels: [__name__]
            regex: 'istio_.*'
            action: keep
          - source_labels: [__name__]
            regex: 'envoy_.*'
            action: keep
    - name: otel
      envoyOtelAls:
        service: opentelemetry-collector.istio-system.svc.cluster.local
        port: 4317
    defaultProviders:
      tracing:
      - jaeger
      metrics:
      - prometheus
      accessLogging:
      - otel
    # Enable automatic mTLS
    trustDomain: cluster.local
    trustDomainAliases:
    - multi-service-platform.local