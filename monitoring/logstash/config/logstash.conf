input {
  beats {
    port => 5044
  }
  
  # Direct log input from services
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # Syslog input
  syslog {
    port => 514
  }
}

filter {
  # Parse JSON logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }
  
  # Add service name from container labels
  if [container][name] {
    mutate {
      add_field => { "service_name" => "%{[container][name]}" }
    }
  }
  
  # Parse timestamp
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Extract log level
  if [level] {
    mutate {
      uppercase => [ "level" ]
    }
  }
  
  # Parse HTTP request logs
  if [method] and [url] and [status] {
    mutate {
      add_field => { "log_type" => "http_request" }
    }
  }
  
  # Parse error logs
  if [level] == "ERROR" or [level] == "FATAL" {
    mutate {
      add_field => { "log_type" => "error" }
    }
  }
  
  # Add correlation ID for tracing
  if [correlationId] {
    mutate {
      add_field => { "trace_id" => "%{correlationId}" }
    }
  }
  
  # Grok patterns for common log formats
  grok {
    match => { 
      "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:level}\] %{DATA:logger} - %{GREEDYDATA:log_message}"
    }
    tag_on_failure => ["_grokparsefailure"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"
    
    # Create different indices for different log types
    if [log_type] == "error" {
      index => "errors-%{+YYYY.MM.dd}"
    } else if [log_type] == "http_request" {
      index => "requests-%{+YYYY.MM.dd}"
    } else if [service_name] {
      index => "%{service_name}-%{+YYYY.MM.dd}"
    }
  }
  
  # Debug output (remove in production)
  stdout { 
    codec => rubydebug 
  }
}