# Production Prometheus Configuration
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'production'
    environment: 'prod'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/service-alerts.yml"
  - "rules/infrastructure-alerts.yml"
  - "rules/business-alerts.yml"
  - "rules/performance-alerts.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
    scrape_interval: 10s
    metrics_path: /metrics

  # API Gateway
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['api-gateway:3000']
    metrics_path: /metrics
    scrape_interval: 10s
    scrape_timeout: 5s

  # Authentication Service
  - job_name: 'authentication-service'
    static_configs:
      - targets: ['authentication-service:3001']
    metrics_path: /metrics
    scrape_interval: 10s

  # Ecommerce Service
  - job_name: 'ecommerce-service'
    static_configs:
      - targets: ['ecommerce-service:3002']
    metrics_path: /metrics
    scrape_interval: 10s

  # Payment Service
  - job_name: 'payment-service'
    static_configs:
      - targets: ['payment-service:3003']
    metrics_path: /metrics
    scrape_interval: 10s

  # Hotel Service
  - job_name: 'hotel-service'
    static_configs:
      - targets: ['hotel-service:3004']
    metrics_path: /metrics
    scrape_interval: 10s

  # Taxi Service
  - job_name: 'taxi-service'
    static_configs:
      - targets: ['taxi-service:3005']
    metrics_path: /metrics
    scrape_interval: 10s

  # Advertisement Service
  - job_name: 'advertisement-service'
    static_configs:
      - targets: ['advertisement-service:3006']
    metrics_path: /metrics
    scrape_interval: 10s

  # Notification Service
  - job_name: 'notification-service'
    static_configs:
      - targets: ['notification-service:3007']
    metrics_path: /metrics
    scrape_interval: 10s

  # File Service
  - job_name: 'file-service'
    static_configs:
      - targets: ['file-service:3008']
    metrics_path: /metrics
    scrape_interval: 10s

  # Search Service
  - job_name: 'search-service'
    static_configs:
      - targets: ['search-service:3009']
    metrics_path: /metrics
    scrape_interval: 10s

  # Analytics Service
  - job_name: 'analytics-service'
    static_configs:
      - targets: ['analytics-service:3010']
    metrics_path: /metrics
    scrape_interval: 10s

  # Admin Service
  - job_name: 'admin-service'
    static_configs:
      - targets: ['admin-service:3011']
    metrics_path: /metrics
    scrape_interval: 10s

  # Database metrics
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # RabbitMQ metrics
  - job_name: 'rabbitmq-exporter'
    static_configs:
      - targets: ['rabbitmq-exporter:9419']
    scrape_interval: 30s

  # Elasticsearch metrics
  - job_name: 'elasticsearch-exporter'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s

  # Nginx metrics
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Blackbox exporter for synthetic monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.yourplatform.com/health
        - https://api.yourplatform.com/api/v1/auth/health
        - https://api.yourplatform.com/api/v1/ecommerce/health
        - https://api.yourplatform.com/api/v1/payment/health
        - https://api.yourplatform.com/api/v1/hotel/health
        - https://api.yourplatform.com/api/v1/taxi/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Kubernetes metrics (if running on K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

# Remote write configuration for long-term storage (optional)
remote_write:
  - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
    basic_auth:
      username: "your-username"
      password: "your-password"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500