services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend-network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - backend-network

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend-network

  ecommerce-service:
    build:
      context: ./ecommerce-service
    container_name: ecommerce-service
    ports:
      - "4000:4000"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      DATABASE_URL: mongodb://mongo:27017/ecommerce
      RABBITMQ_URL: amqp://rabbitmq
    networks:
      - backend-network

  hotel-service:
    build:
      context: ./hotel-service
    container_name: hotel-service
    ports:
      - "4001:4001"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      DATABASE_URL: mongodb://mongo:27017/hotel
      RABBITMQ_URL: amqp://rabbitmq
    networks:
      - backend-network

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "4002:4002"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      DATABASE_URL: mongodb://mongo:27017/payment
      RABBITMQ_URL: amqp://rabbitmq
    networks:
      - backend-network

  advertisement-service:
    build:
      context: ./advertisement-service
    container_name: advertisement-service
    ports:
      - "4003:4003"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      DATABASE_URL: mongodb://mongo:27017/advertisements
      RABBITMQ_URL: amqp://rabbitmq
    networks:
      - backend-network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    depends_on:
      - ecommerce-service
      - hotel-service
      - payment-service
      - advertisement-service
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge